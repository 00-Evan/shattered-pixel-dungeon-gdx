diff a/core/src/com/watabou/pixeldungeon/PixelDungeon.java b/core/src/com/watabou/pixeldungeon/PixelDungeon.java	(rejected hunks)
@@ -37,72 +37,37 @@ public class PixelDungeon extends Game {
 	
 	public PixelDungeon() {
 		super( TitleScene.class );
-		
-		com.watabou.utils.Bundle.addAlias( 
-			com.watabou.pixeldungeon.items.scrolls.ScrollOfUpgrade.class, 
-			"com.watabou.pixeldungeon.items.scrolls.ScrollOfEnhancement" );
-		com.watabou.utils.Bundle.addAlias( 
-			com.watabou.pixeldungeon.actors.blobs.WaterOfHealth.class, 
-			"com.watabou.pixeldungeon.actors.blobs.Light" );
-		com.watabou.utils.Bundle.addAlias( 
-			com.watabou.pixeldungeon.items.rings.RingOfMending.class, 
-			"com.watabou.pixeldungeon.items.rings.RingOfRejuvenation" );
-		com.watabou.utils.Bundle.addAlias( 
-			com.watabou.pixeldungeon.items.wands.WandOfTelekinesis.class, 
-			"com.watabou.pixeldungeon.items.wands.WandOfTelekenesis" );
-		com.watabou.utils.Bundle.addAlias( 
-			com.watabou.pixeldungeon.actors.blobs.Foliage.class, 
-			"com.watabou.pixeldungeon.actors.blobs.Blooming" );
-		com.watabou.utils.Bundle.addAlias( 
-			com.watabou.pixeldungeon.actors.buffs.Shadows.class, 
-			"com.watabou.pixeldungeon.actors.buffs.Rejuvenation" );
-		com.watabou.utils.Bundle.addAlias( 
-			com.watabou.pixeldungeon.items.scrolls.ScrollOfPsionicBlast.class, 
-			"com.watabou.pixeldungeon.items.scrolls.ScrollOfNuclearBlast" );
-		com.watabou.utils.Bundle.addAlias( 
-			com.watabou.pixeldungeon.actors.hero.Hero.class, 
-			"com.watabou.pixeldungeon.actors.Hero" );
-		com.watabou.utils.Bundle.addAlias( 
-			com.watabou.pixeldungeon.actors.mobs.npcs.Shopkeeper.class,
-			"com.watabou.pixeldungeon.actors.mobs.Shopkeeper" );
-		// 1.6.1
-		com.watabou.utils.Bundle.addAlias( 
-			com.watabou.pixeldungeon.items.quest.DriedRose.class,
-			"com.watabou.pixeldungeon.items.DriedRose" );
-		com.watabou.utils.Bundle.addAlias( 
-			com.watabou.pixeldungeon.actors.mobs.npcs.MirrorImage.class,
-			"com.watabou.pixeldungeon.items.scrolls.ScrollOfMirrorImage.MirrorImage" );
-		// 1.6.4
-		com.watabou.utils.Bundle.addAlias( 
-			com.watabou.pixeldungeon.items.rings.RingOfElements.class,
-			"com.watabou.pixeldungeon.items.rings.RingOfCleansing" );
-		com.watabou.utils.Bundle.addAlias( 
-			com.watabou.pixeldungeon.items.rings.RingOfElements.class,
-			"com.watabou.pixeldungeon.items.rings.RingOfResistance" );
-		com.watabou.utils.Bundle.addAlias( 
-			com.watabou.pixeldungeon.items.weapon.missiles.Boomerang.class,
-			"com.watabou.pixeldungeon.items.weapon.missiles.RangersBoomerang" );
-		com.watabou.utils.Bundle.addAlias( 
-			com.watabou.pixeldungeon.items.rings.RingOfPower.class,
-			"com.watabou.pixeldungeon.items.rings.RingOfEnergy" );
-		// 1.7.2
-		com.watabou.utils.Bundle.addAlias( 
-			com.watabou.pixeldungeon.plants.Dreamweed.class,
-			"com.watabou.pixeldungeon.plants.Blindweed" );
-		com.watabou.utils.Bundle.addAlias( 
-			com.watabou.pixeldungeon.plants.Dreamweed.Seed.class,
-			"com.watabou.pixeldungeon.plants.Blindweed$Seed" );
-	}
-	
+		/*
+        // 1.7.2
+        com.watabou.utils.Bundle.addAlias(
+                com.watabou.pixeldungeon.plants.Dreamweed.class,
+                "com.watabou.pixeldungeon.plants.Blindweed" );
+        com.watabou.utils.Bundle.addAlias(
+                com.watabou.pixeldungeon.plants.Dreamweed.Seed.class,
+                "com.watabou.pixeldungeon.plants.Blindweed$Seed" );
+        */
+	}
+	
+	@SuppressWarnings("deprecation")
 	@Override
 	protected void onCreate( Bundle savedInstanceState ) {
-		super.onCreate( savedInstanceState );
-		
-		updateImmersiveMode();
+		super.onCreate(savedInstanceState);
 		
-		DisplayMetrics metrics = new DisplayMetrics();
-		instance.getWindowManager().getDefaultDisplay().getMetrics( metrics );
-		boolean landscape = metrics.widthPixels > metrics.heightPixels;
+	/*	if (android.os.Build.VERSION.SDK_INT >= 19) {
+			getWindow().getDecorView().setSystemUiVisibility( 
+				View.SYSTEM_UI_FLAG_LAYOUT_STABLE | 
+				View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION | 
+				View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN | 
+				View.SYSTEM_UI_FLAG_HIDE_NAVIGATION | 
+				View.SYSTEM_UI_FLAG_FULLSCREEN | 
+				View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY );
+		}*/
+
+        updateImmersiveMode();
+
+        DisplayMetrics metrics = new DisplayMetrics();
+        instance.getWindowManager().getDefaultDisplay().getMetrics( metrics );
+        boolean landscape = metrics.widthPixels > metrics.heightPixels;
 		
 		if (Preferences.INSTANCE.getBoolean( Preferences.KEY_LANDSCAPE, false ) != landscape) {
 			landscape( !landscape );
@@ -111,21 +76,21 @@ public class PixelDungeon extends Game {
 		Music.INSTANCE.enable( music() );
 		Sample.INSTANCE.enable( soundFx() );
 	}
-	
-	@Override
-	public void onWindowFocusChanged( boolean hasFocus ) {
-		
-		super.onWindowFocusChanged( hasFocus );
-		
-		if (hasFocus) {
-			updateImmersiveMode();
-		}
-	}
-	
-	public static void switchNoFade( Class<? extends PixelScene> c ) {
-		PixelScene.noFade = true;
-		switchScene( c );
-	}
+
+    @Override
+    public void onWindowFocusChanged( boolean hasFocus ) {
+
+        super.onWindowFocusChanged( hasFocus );
+
+        if (hasFocus) {
+            updateImmersiveMode();
+        }
+    }
+
+    public static void switchNoFade( Class<? extends PixelScene> c ) {
+        PixelScene.noFade = true;
+        switchScene( c );
+    }
 	
 	/*
 	 * ---> Prefernces
@@ -142,59 +107,59 @@ public class PixelDungeon extends Game {
 		return width > height;
 	}
 	
-	// *** IMMERSIVE MODE ****
-	
-	private static boolean immersiveModeChanged = false;
-	
-	@SuppressLint("NewApi")
-	public static void immerse( boolean value ) {
-		Preferences.INSTANCE.put( Preferences.KEY_IMMERSIVE, value );
-		
-		instance.runOnUiThread( new Runnable() {
-			@Override
-			public void run() {
-				updateImmersiveMode();
-				immersiveModeChanged = true;
-			}
-		} );
-	}
-	
-	@Override
-	public void onSurfaceChanged( GL10 gl, int width, int height ) {
-		super.onSurfaceChanged( gl, width, height );
-		
-		if (immersiveModeChanged) {
-			requestedReset = true;
-			immersiveModeChanged = false;
-		}
-	}
-	
-	@SuppressLint("NewApi")
-	public static void updateImmersiveMode() {
-		if (android.os.Build.VERSION.SDK_INT >= 19) {
-			instance.getWindow().getDecorView().setSystemUiVisibility( 
-				immersed() ?
-				View.SYSTEM_UI_FLAG_LAYOUT_STABLE | 
-				View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION | 
-				View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN | 
-				View.SYSTEM_UI_FLAG_HIDE_NAVIGATION | 
-				View.SYSTEM_UI_FLAG_FULLSCREEN | 
-				View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY 
-				:
-				0 );
-		}
-	}
-	
-	public static boolean immersed() {
-		return Preferences.INSTANCE.getBoolean( Preferences.KEY_IMMERSIVE, false );
-	}
-	
-	// *****************************
-	
 	public static void scaleUp( boolean value ) {
 		Preferences.INSTANCE.put( Preferences.KEY_SCALE_UP, value );
 		switchScene( TitleScene.class );
 	}
+
+    // *** IMMERSIVE MODE ****
+
+    private static boolean immersiveModeChanged = false;
+
+    @SuppressLint("NewApi")
+    public static void immerse( boolean value ) {
+        Preferences.INSTANCE.put( Preferences.KEY_IMMERSIVE, value );
+
+        instance.runOnUiThread( new Runnable() {
+            @Override
+            public void run() {
+                updateImmersiveMode();
+                immersiveModeChanged = true;
+            }
+        } );
+    }
+
+    @Override
+    public void onSurfaceChanged( GL10 gl, int width, int height ) {
+        super.onSurfaceChanged( gl, width, height );
+
+        if (immersiveModeChanged) {
+            requestedReset = true;
+            immersiveModeChanged = false;
+        }
+    }
+
+    @SuppressLint("NewApi")
+    public static void updateImmersiveMode() {
+        if (android.os.Build.VERSION.SDK_INT >= 19) {
+            instance.getWindow().getDecorView().setSystemUiVisibility(
+                    immersed() ?
+                            View.SYSTEM_UI_FLAG_LAYOUT_STABLE |
+                                    View.SYSTEM_UI_FLAG_LAYOUT_HIDE_NAVIGATION |
+                                    View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN |
+                                    View.SYSTEM_UI_FLAG_HIDE_NAVIGATION |
+                                    View.SYSTEM_UI_FLAG_FULLSCREEN |
+                                    View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY
+                            :
+                            0 );
+        }
+    }
+
+    public static boolean immersed() {
+        return Preferences.INSTANCE.getBoolean( Preferences.KEY_IMMERSIVE, false );
+    }
+
+    // *****************************
 	
 	public static boolean scaleUp() {
 		return Preferences.INSTANCE.getBoolean( Preferences.KEY_SCALE_UP, true );
@@ -268,6 +233,14 @@ public class PixelDungeon extends Game {
 	public static boolean intro() {
 		return Preferences.INSTANCE.getBoolean( Preferences.KEY_INTRO, true );
 	}
+
+    public static void version( int value)  {
+        Preferences.INSTANCE.put( Preferences.KEY_VERSION, value );
+    }
+
+    public static int version() {
+        return Preferences.INSTANCE.getInt( Preferences.KEY_VERSION, 0 );
+    }
 	
 	/*
 	 * <--- Preferences
@@ -276,4 +249,4 @@ public class PixelDungeon extends Game {
 	public static void reportException( Exception e ) {
 		Log.e( "PD", Log.getStackTraceString( e ) ); 
 	}
-}
\ No newline at end of file
+}
